package fr.idformation.evaluation.core.domain;

import fr.idformation.evaluation.ConstantList;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

@Entity
@Table(name = "contact_client")
public class Contact {

	/**
	 * The Contact entity's autogenerated id number.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "coc_id", nullable = false)
	private Integer id;

	/**
	 * The Contact entity's link to the customer's entity.
	 */
	@ManyToOne
	@JoinColumn(name = "cli_id", nullable = false)
	private Customer customer;

	/**
	 * The Contact entity's link to the typeContact entity.
	 */
	@ManyToOne
	@JoinColumn(name = "tco_id", nullable = false)
	private TypeContact typeContact;

	/**
	 * The Contact entity's value can be either a phone number, an email, a fax or a
	 * mobile phone number.
	 */
	@Column(name = "coc_valeur", nullable = false)
	@Size(max = ConstantList.MAX_SIZE)
	private String value;

	/**
	 * @return the id
	 */
	public int getId() {
		return id;
	}

	/**
	 * @param pId the id to set
	 */
	public void setId(final Integer pId) {
		this.id = pId;
	}

	/**
	 * @return the customer
	 */
	public Customer getCustomer() {
		return customer;
	}

	/**
	 * @param pCustomer the customer to set
	 */
	public void setCustomer(final Customer pCustomer) {
		this.customer = pCustomer;
	}

	/**
	 * @return the typeContact
	 */
	public TypeContact getTypeContact() {
		return typeContact;
	}

	/**
	 * @param pTypeContact the typeContact to set
	 */
	public void setTypeContact(final TypeContact pTypeContact) {
		this.typeContact = pTypeContact;
	}

	/**
	 * @return the value
	 */
	public String getValue() {
		return value;
	}

	/**
	 * @param pValue the value to set
	 */
	public void setValue(final String pValue) {
		this.value = pValue;
	}

	/**
	 * The Contact entity's default contructor.
	 */
	public Contact() {
		super();

	}

}
